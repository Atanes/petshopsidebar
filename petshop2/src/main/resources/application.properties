spring.mvc.locale-resolver=fixed
spring.mvc.locale=pt_BR

# ===============================
# = DATA SOURCE - MySQL
# ===============================
# spring.datasource.dbcp2.driver = com.mysql.cj.jdbc.Driver
# spring.datasource.url = jdbc:mysql://localhost:3306/petshopbd
# spring.datasource.username = UAtanes
# spring.datasource.password = PAtanes

# ===============================
# = DATA SOURCE - PostGreSQL
# ===============================
# Set here configurations for the database connection
 spring.datasource.driverClassName=org.postgresql.Driver
 spring.datasource.maxActive=10
 spring.datasource.maxIdle=5
 spring.datasource.minIdle=2
 spring.datasource.initialSize=5
 spring.datasource.removeAbandoned=true

 spring.datasource.url=jdbc:postgresql://localhost:5432/petshopbd?createDatabaseIfNotExist=true&useSSL=false
 spring.datasource.username=UAtanes
 spring.datasource.password=PAtanes

# ===================================
# = DATA SOURCE - PostGreSQL - HEROKU
# ===================================
# spring.datasource.url=jdbc:postgres://qgmdqahncaxtvg:f1696b481c92d8c25eaefb0cdefd72366fc7f0d1b876cb03fd8568589a3569f0@ec2-174-129-227-146.compute-1.amazonaws.com:5432/d218gbub5bbv7e?sslmode=require
# spring.datasource.username=qgmdqahncaxtvg
# spring.datasource.password=f1696b481c92d8c25eaefb0cdefd72366fc7f0d1b876cb03fd8568589a3569f0
# spring.datasource.driver-class-name=org.postgresql.Driver

# =========================================================
# = DATA SOURCE - PostGreSQL - HEROKU - Com aplicação local
# =========================================================
# spring.datasource.url=jdbc:postgresql://ec2-174-129-227-146.compute-1.amazonaws.com:5432/d218gbub5bbv7e?sslmode=require
# spring.datasource.username=qgmdqahncaxtvg
# spring.datasource.password=f1696b481c92d8c25eaefb0cdefd72366fc7f0d1b876cb03fd8568589a3569f0
# spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# = JPA / HIBERNATE - PostGreSQL
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# ===============================
# = JPA / HIBERNATE - MySQL
# ===============================
# spring.jpa.show-sql = true
# spring.jpa.hibernate.ddl-auto = update
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ===============================
# = Controle das imagens gravadas
# ===============================

petshop.disco.raiz=/gestaopetshop
petshop.disco.diretorio-imagens=/gestaopetshop/imagens